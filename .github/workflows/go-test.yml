name: Go test

on:
  push:
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
  pull_request:
  workflow_dispatch:


jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      name: setup go
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
      name: checkout

    - run: go test -v -race
      if: matrix.os != 'ubuntu-latest'
      name: go test (non-Linux)

    - run: go test -v -race -coverprofile=coverage.out -covermode=atomic
      if: matrix.os == 'ubuntu-latest'
      name: go test (Linux)

    - uses: codecov/codecov-action@v2
      if: matrix.os == 'ubuntu-latest'
      with:
        files: ./coverage1.out
        verbose: true # optional (default = false)


  # test-cache:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/setup-go@v3
  #     with:
  #       go-version: 1.18.x
  #   - uses: actions/checkout@v3
  #   - uses: actions/cache@v2
  #     with:
  #       # In order:
  #       # * Module download cache
  #       # * Build cache (Linux)
  #       # * Build cache (Mac)
  #       # * Build cache (Windows)
  #       path: |
  #         ~/go/pkg/mod
  #         ~/.cache/go-build
  #         ~/Library/Caches/go-build
  #         ~\AppData\Local\go-build
  #       key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
  #       restore-keys: |
  #         ${{ runner.os }}-go-${{ matrix.go-version }}-
  #   - run: go test ./...
